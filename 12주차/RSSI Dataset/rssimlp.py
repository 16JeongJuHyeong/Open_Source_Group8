# -*- coding: utf-8 -*-
"""RssiMlp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qWnhEQaCwaqO7IDpmdarcBEe3Yo2UeUO
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras import optimizers

np.random.seed(5)

data = pd.read_csv('RSSI-Dataset.csv')
data['Cell'] = data['Cell'].replace(['A','B','C','D','E','F','G','H'],[0,1,2,3,4,5,6,7])
from sklearn.model_selection import train_test_split
data_X = data[['AWifi', 'BWifi', 'CWifi']].values
data_y = data['Cell'].values
(X_train, X_test, y_train, y_test) = train_test_split(data_X, data_y, train_size=0.8, random_state=1)
from tensorflow.keras.utils import to_categorical
y_train = to_categorical(y_train)
y_test = to_categorical(y_test)

model=Sequential()
model.add(Dense(512, input_dim=3, activation='relu'))
model.add(Dense(512, activation='relu'))
model.add(Dense(8, activation='softmax'))
sgd=optimizers.SGD(lr=0.01)
model.compile(loss='categorical_crossentropy', optimizer='adam',metrics=['acc'])
hist=model.fit(X_train,y_train, batch_size=10, epochs=200, validation_data=(X_test, y_test))
scores = model.evaluate(X_test, y_test)
print("%s: %.2f%%" %(model.metrics_names[1], scores[1]*100))

# %matplotlib inline
import matplotlib.pyplot as plt

fig, loss_ax = plt.subplots()

acc_ax = loss_ax.twinx()

loss_ax.plot(hist.history['loss'], 'y', label='train loss')
loss_ax.plot(hist.history['val_loss'], 'r', label='val loss')

acc_ax.plot(hist.history['acc'], 'b', label='train acc')
acc_ax.plot(hist.history['val_acc'], 'g', label='val acc')

loss_ax.set_xlabel('epoch')
loss_ax.set_ylabel('loss')
acc_ax.set_ylabel('accuray')

loss_ax.legend(loc='upper left')
acc_ax.legend(loc='lower left')

plt.show()